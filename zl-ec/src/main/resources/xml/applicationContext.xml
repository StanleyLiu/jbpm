<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tool="http://www.springframework.org/schema/tool"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
  		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool-3.1.xsd
  		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
  		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
  		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
  		http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
	
	<context:annotation-config />
	
	<context:component-scan base-package="com.zl.bgec" />
	<bean id = "taskMgtInitServComponentImpl" class = "com.zl.bgec.taskmgt.service.component.impl.TaskMgtInitServComponentImpl" init-method="init" lazy-init="false">  </bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
			 	<value>classpath*:properties/development/*.properties</value>
			 	<!-- <value>classpath*:properties/production/*.properties</value> -->
			 	<!-- <value>classpath*:properties/testing/*.properties</value> -->
			</list>
		</property>
	</bean>
	
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource"></ref>
		</property>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show.sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format.sql}</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.zl.bgec.*.po</value>
				<value>com.zl.bgec.*.*.po</value>
				<value>com.zl.bgec.*.*.*.po</value>
			</list>
		</property>
	</bean>
	<bean id="contentPublisher" class="com.zl.bgec.basicapi.common.utils.ContentPublisher">
		
		<property name="host"><!-- 图片资源服务器列表 -->
		<list>
			<bean class="com.zl.bgec.basicapi.common.utils.WebServerConfig">
				<property name="host" value="${cms.sftp.host}"/>
				<property name="username" value="${cms.sftp.username}"/>
				<property name="port" value="${cms.sftp.port}"/>
				<property name="passwd" value="${cms.sftp.passwd}"/>
				<property name="sitepath" value="${cms.sftp.sitepath}"/>
				<property name="sync" value="${cms.sftp.sync}"/>
			</bean>
		</list>
		</property>
	</bean>	
	<aop:aspectj-autoproxy expose-proxy="true"/>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
	
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	
	    <property name="url" value="${jdbc.url}" />
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	    
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />
		
		<property name="maxWait" value="60000" />
		
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		
		<property name="minEvictableIdleTimeMillis" value="300000" />
		
		
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		
		<property name="filters" value="stat" />
	</bean>
	
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
		<property name="patterns">
			<list>
				<value>org.lazicats.ecos.erp.basedata.dal.model.entity.*</value>
			</list>
		</property>
	</bean>
	<!-- jedis对象池配置 -->
	<bean id="sdkConstants" class="com.zl.bgec.basicapi.common.oauth2.SdkConstants">
		<property name="API_KEY" value="${API_KEY}"/>
		<property name="API_SECRET" value="${API_SECRET}"/>
		<property name="API_AUTHORIZE_SERVICE_URI" value="${API_AUTHORIZE_SERVICE_URI}"/>
		<property name="API_TOKEN_SERVICE_URI" value="${API_TOKEN_SERVICE_URI}"/>
		<property name="API_OAUTH2API_URI" value="${API_OAUTH2API_URI}"/>
		<property name="CLIENT_REDIRECT_URI" value="${CLIENT_REDIRECT_URI}"/>
		<property name="CLIENT_LISTBIZCATEGORIES_URI" value="${CLIENT_LISTBIZCATEGORIES_URI}"/>
		<property name="CLIENT_SYNCUSERADDSHOPSTATUS_URI" value="${CLIENT_SYNCUSERADDSHOPSTATUS_URI}"/>
		<property name="CLIENT_SYNCDELETEBUSINESS_URI" value="${CLIENT_SYNCDELETEBUSINESS_URI}"/>
		<property name="CLIENT_SYNCBUSINESS_URI" value="${CLIENT_SYNCBUSINESS_URI}"/>
		<property name="CLIENT_SYNCUSERFAVORITE_URI" value="${CLIENT_SYNCUSERFAVORITE_URI}"/>
		<property name="CLIENT_SYNCUSERCANCELFAVORITE_URI" value="${CLIENT_SYNCUSERCANCELFAVORITE_URI}"/>
		<property name="CLIENT_FINDBUSINESSFAVORITESTATUS_URI" value="${CLIENT_FINDBUSINESSFAVORITESTATUS_URI}"/>
		<property name="SERVER_URI" value="${SERVER_URI}"/>
		<property name="CLIENT_SENDMESSAGETOUSER_URI" value="${CLIENT_SENDMESSAGETOUSER_URI}"/>
		<property name="CLIENT_USERSERVERADDRESS_URI" value="${CLIENT_USERSERVERADDRESS_URI}"/>
		<property name="CLIENT_USER_DEFAULT_SERVERADDRESS_URI" value="${CLIENT_USER_DEFAULT_SERVERADDRESS_URI}"/>
		<property name="CLIENT_RECEIVECOUPON_URI" value="${CLIENT_RECEIVECOUPON_URI}"/>
		<property name="CLIENT_CREATE_REFUND_RECORD" value="${CLIENT_CREATE_REFUND_RECORD}"/>
		<property name="CLIENT_GET_USER_INFO" value="${CLIENT_GET_USER_INFO}"/>
	</bean>
	
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>
	
	<!-- <import resource="classpath:xml/redis.xml"/> -->
</beans>

